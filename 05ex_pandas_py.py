# -*- coding: utf-8 -*-
"""05ex_pandas.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uWoB6ta9nl5QoG-qtOIptEooBva1ZeXH
"""

import pandas as pd
import matplotlib.pyplot as plt

#EX1

pd.set_option('display.max_rows', None)
df = pd.read_csv('data_000637.txt')
N = 20000
print(df.head(N))

#EX2

for i in range (N):
    if df.iloc[i]['BX_COUNTER'] == 0:
        print("\nThe row which BX counter resets: ", i, "\n The value: ", df.iloc[i]['BX_COUNTER'])
        print("\nThe maximum value:", df.iloc[i-1]['BX_COUNTER'], "\n Row: ", i-1)
        x = df.iloc[i-1]['BX_COUNTER']
        break
print("x =", x)

#EX3

df = df.assign(ABSOLUTE_TIME=df['BX_COUNTER'].apply(lambda x: x*25) + df['TDC_MEAS'].apply(lambda x: x*25/30) +
                      df['ORBIT_CNT'].apply(lambda x: x*25*3563))
print("\nThe result is:\n", df['ABSOLUTE_TIME'][0:10])

#EX4

df['DURATION_MEASUREMENT'] = pd.to_timedelta(df['ABSOLUTE_TIME'])
print("\nThe duration of each measurement:\n", df['DURATION_MEASUREMENT'][0:5].diff())
print("\nThe duration of taking the whole dataset:\n", (df['DURATION_MEASUREMENT'].max() - df['DURATION_MEASUREMENT'].min()))

#EX5

print("\n The top 3 are: ", df.groupby('HEAD')['TDC_CHANNEL'].nlargest(3))

#EX6

count = df.ORBIT_CNT.unique().size
print("The number of non-empty orbits is: " + str(count))

#EX7

unique = pd.DataFrame(df[df['TDC_CHANNEL'] == 139]).drop_duplicates(subset=['ORBIT_CNT'], inplace=False)
print("\nThe number of unique orbits with at least one measurement from TDC_CHANNEL = 139 is ", len(unique))

#EX8

FPGA_1 = pd.Series(df[df['FPGA'] == 0]['TDC_CHANNEL'].value_counts())
FPGA_2 = pd.Series(df[df['FPGA'] == 1]['TDC_CHANNEL'].value_counts())
print("Series 1:", FPGA_1)
print("\nSeries 2", FPGA_2)